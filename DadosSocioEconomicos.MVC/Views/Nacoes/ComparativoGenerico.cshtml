@model DadosSocioEconomicos.Entidades.Entidades.NacoesGeral

<div style="height:20px"></div>
<form asp-action="ComparativoGenerico">
    <table>
        <tr>
            <td><label>Selecione os países:</label></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td style="width:20px"></td>
            <td><b>Selecione o indicador desejado:</b></td>
        </tr>
        <tr>
            <td>@Html.ListBox("ListOrigem", @ViewBag.Paises, new { @class = "form-control", @Id = "ListOrigem" })</td>
            <td style="width:20px"></td>
            <td><button type="button" onclick="AdicionaPaises()" class="form-control"><b>>></b></button></td>
            <td style="width:20px"></td>
            <td><select asp-for="ListaNacoes" id="ListDestino" multiple class="form-control"></select></td>
            <td style="width:20px"></td>
            <td>
                <select asp-for="Indicador" class="form-control">
                    <option value="Populacao">População</option>
                    <option value="PIB">PIB</option>
                    <option value="IDH">IDH</option>
                </select>
            </td>
        </tr>
        <tr>
            <td style="height:15px"></td>
        </tr>
        <tr>
            <td></td>
            <td style="width:20px"></td>
            <td></td>
            <td style="width:20px"></td>
            <td><button type="button" onclick="Limpar()" class="form-control">Limpar item selecionado</button></td>
        </tr>
    </table>
    <br><br>
    <div class="form-group">
        <input type="submit" value="Gerar gráfico" class="btn btn-default" />
    </div>
    <div>@ViewBag.Nome</div>
    <div class="box-body">
        <div class="chart-container">
            <canvas id="chart" style="width:100%; height:500px"></canvas>
        </div>
    </div>
    @{
        var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(@ViewBag.EixoX);
        var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(@ViewBag.EixoY);
    }
    <script>
        function AdicionaPaises() {
            var i;
            for (i = 0; i < ListOrigem.options.length; i++) {
                if (ListOrigem.options[i].selected == true) {
                    var Op = document.createElement('option');
                    Op.text = ListOrigem.options[i].text;
                    Op.value = ListOrigem.options[i].value;
                    ListDestino.options.add(Op);
                    //ListOrigem.options.remove(i);
                    i = i + 1;
                }
            }
        }
    </script>
    <script>
        function Limpar() {
            var i;
            for (i = 0; i < ListDestino.options.length; i++) {
                if (ListDestino.options[i].selected == true) {
                    ListDestino.options.remove(i);
                    i = i + 1;
                }
            }
        }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script type="text/javascript">
    $(function () {
        var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: "Dados",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
    }]
            };

                var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

            var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'bar'

            });
    });
    </script>
</form>